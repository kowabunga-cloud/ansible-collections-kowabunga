name: release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build Ansible collection
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Build Collection
      uses: artis3n/ansible_galaxy_collection@v2
      with:
        api_key: '${{ secrets.GALAXY_API_KEY }}'
        publish: false
    - run: mkdir dist
    - run: mv *.tar.gz dist
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: ansible-collection-kowabunga
        path: dist/

  publish-to-galaxy:
    name: Publish to Ansible Galaxy
    if: startsWith(github.ref, 'refs/tags/')  # only publish to Galaxy on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: ansible-collection-kowabunga
        path: dist/
    - run: cp dist/*.tar.gz .
    - name: Publish Collection
      uses: artis3n/ansible_galaxy_collection@v2
      with:
        api_key: '${{ secrets.GALAXY_API_KEY }}'
        build: false

  github-release:
    name: Sign with Sigstore and upload to GitHub Release
    if: startsWith(github.ref, 'refs/tags/')  # only publish to GitHub on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: ansible-collection-kowabunga
        path: .
    - run: mkdir dist
    - run: mv *.tar.gz dist
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        "$GITHUB_REF_NAME"
        --repo "$GITHUB_REPOSITORY"
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        "$GITHUB_REF_NAME" dist/**
        --repo "$GITHUB_REPOSITORY"
