---
# Copyright (c) The Kowabunga Project
# Apache License, Version 2.0 (see LICENSE or https://www.apache.org/licenses/LICENSE-2.0.txt)
# SPDX-License-Identifier: Apache-2.0

- name: Install Grafana
  ansible.builtin.apt:
    name: "{{ item }}"
    state: latest
  loop:
    - grafana
    - grafanactl
  notify: Restart grafana

- name: Create data directory
  ansible.builtin.file:
    dest: "{{ item }}"
    owner: "{{ grafana_system_user }}"
    group: "{{ grafana_system_group }}"
    mode: 0755
    state: directory
  loop:
    - "{{ grafana_data_dir }}"
    - "{{ grafana_data_dir }}/plugins"
    - "{{ grafana_data_dir }}/dashboards"

- name: Template configuration
  ansible.builtin.template:
    src: grafana.ini.j2
    dest: "{{ grafana_config_dir }}/grafana.ini"
    owner: "{{ grafana_system_user }}"
    group: "{{ grafana_system_group }}"
    mode: 0644
  notify: Restart grafana

- name: Template grafanactl configuration
  ansible.builtin.template:
    src: grafanactl.yml.j2
    dest: "{{ grafana_config_dir }}/grafanactl.yml"
    owner: "{{ grafana_system_user }}"
    group: "{{ grafana_system_group }}"
    mode: 0644

- name: Install plugins
  ansible.builtin.command: grafana-cli plugins install {{ item }}
  register: grafana_install_plugin_result
  failed_when: grafana_install_plugin_result.rc != 0
  changed_when: false
  loop: "{{ grafana_plugins }}"
  notify: Restart grafana

- name: Ensure Grafana is up
  ansible.builtin.meta: flush_handlers

- name: Enable and start systemd services
  ansible.builtin.systemd_service:
    name: grafana-server
    enabled: true
    daemon_reload: true
    state: started

- name: Ensure grafana is up
  ansible.builtin.uri:
    url: "{{ grafana_api_uri }}/org"
    user: "{{ kowabunga_metrology_dashboard_admin_user }}"
    password: "{{ kowabunga_metrology_dashboard_admin_password }}"
    force_basic_auth: true
  register: result
  until: result.status == 200
  retries: 20
  delay: 3
  changed_when: false

- name: Update main organization's name
  ansible.builtin.uri:
    url: "{{ grafana_api_uri }}/orgs/1"
    method: PUT
    user: "{{ kowabunga_metrology_dashboard_admin_user }}"
    password: "{{ kowabunga_metrology_dashboard_admin_password }}"
    body_format: json
    body: { "name": "{{ grafana_org_name }}" }
    force_basic_auth: true
    status_code: 200
  run_once: true

- name: Check if Prometheus datasource is configured in Grafana
  ansible.builtin.uri:
    url: "{{ grafana_datasource_uri }}/name/{{ grafana_datasource_prometheus_name }}"
    user: "{{ kowabunga_metrology_dashboard_admin_user }}"
    password: "{{ kowabunga_metrology_dashboard_admin_password }}"
    force_basic_auth: true
  register: grafana_ds_prometheus
  failed_when: grafana_ds_prometheus.status == 401
  changed_when: false

- name: Enable Prometheus datasource
  ansible.builtin.uri:
    url: "{{ grafana_datasource_uri }}"
    method: POST
    user: "{{ kowabunga_metrology_dashboard_admin_user }}"
    password: "{{ kowabunga_metrology_dashboard_admin_password }}"
    body_format: json
    body: "{{ lookup('template', 'prometheus-datasource.json.j2') }}"
    force_basic_auth: true
    status_code: 200
  run_once: true
  when: grafana_ds_prometheus.status in [403, 404]

- name: Check if Victoria Logs datasource is configured in Grafana
  ansible.builtin.uri:
    url: "{{ grafana_datasource_uri }}/name/{{ grafana_datasource_victorialogs_name }}"
    user: "{{ kowabunga_metrology_dashboard_admin_user }}"
    password: "{{ kowabunga_metrology_dashboard_admin_password }}"
    force_basic_auth: true
  register: grafana_ds_victorialogs
  failed_when: grafana_ds_victorialogs.status == 401
  changed_when: false

- name: Enable Victoria Logs datasource
  ansible.builtin.uri:
    url: "{{ grafana_datasource_uri }}"
    method: POST
    user: "{{ kowabunga_metrology_dashboard_admin_user }}"
    password: "{{ kowabunga_metrology_dashboard_admin_password }}"
    body_format: json
    body: "{{ lookup('template', 'victoria-logs-datasource.json.j2') }}"
    force_basic_auth: true
    status_code: 200
  run_once: true
  when: grafana_ds_victorialogs.status in [403, 404]

- name: Register additional users
  ansible.builtin.uri:
    user: "{{ kowabunga_metrology_dashboard_admin_user }}"
    password: "{{ kowabunga_metrology_dashboard_admin_password }}"
    force_basic_auth: true
    method: POST
    url: "{{ grafana_api_uri }}/admin/users"
    body_format: json
    status_code: [200, 412] # returns http 412 when user is already created
    body:
      name: "{{ item.name }}"
      email: "{{ item.email }}"
      login: "{{ item.username }}"
      password: "{{ item.password }}"
      # default viewer role is enough
  loop: "{{ kowabunga_metrology_dashboard_extra_users }}"
